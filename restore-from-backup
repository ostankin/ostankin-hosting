#!/bin/bash
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source $DIR/common-functions
BACKUP_DIR=$BASE_BACKUP_DIR/latest
DB_IMPORT_DIR=.db_import
DATA_DIR=.data
DB_DIR=$DATA_DIR/db
DB_HOST=db
PWD_GEN_CMD='cat /dev/urandom | tr -dc A-Za-z0-9 | head -c${1:-32};echo;'
TIMESTAMP_CMD='date +%Y%j%H%M%S%N'
TIMESTAMP_EXT='.timestamp'

OPTIND=1
while getopts "ay" opt; do
  case "$opt" in
  a)
    COMPLETE_RESTORE=true
    ;;
  y)
    IMPLIED_YES=true
    ;;
esac
done
shift $((OPTIND-1))

function drupal_replace_field {
  sudo sed -i -e 's/\('\'$2\''\s\+=>\s\+'\''\)[^'\'']*\('\''\)/\1'$3'\2/g' $1
}

function modx_replace_field {
  sudo sed -i -e 's/\('\$$2'\s\+=\s\+'\''\)[^'\'']*\('\''\)/\1'$3'\2/g' $1
}

function drupal_update_config {
  CMS_SETTINGS=$CMS_DIR/sites/default/settings.php
  sudo chmod u+w $CMS_SETTINGS
  drupal_replace_field $CMS_SETTINGS database $DB_NAME
  drupal_replace_field $CMS_SETTINGS username $USER_NAME
  drupal_replace_field $CMS_SETTINGS password $USER_PASSWORD
  drupal_replace_field $CMS_SETTINGS host $DB_HOST
  drupal_replace_field $CMS_SETTINGS prefix $TABLE_PREFIX
  sudo chmod a-w $CMS_SETTINGS
}

function modx_update_config {
  CMS_SETTINGS=$CMS_DIR/manager/includes/config.inc.php
  modx_replace_field $CMS_SETTINGS dbase $DB_NAME
  modx_replace_field $CMS_SETTINGS database_user $USER_NAME
  modx_replace_field $CMS_SETTINGS database_password $USER_PASSWORD
  modx_replace_field $CMS_SETTINGS database_server $DB_HOST
  modx_replace_field $CMS_SETTINGS table_prefix $TABLE_PREFIX
}

function generate_root_password {
  MYSQL_ROOT_PASSWORD=$(eval $PWD_GEN_CMD)
  echo "MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD" > $DB_SECRET
}

function generate_user_password {
  USER_PASSWORD=$(eval $PWD_GEN_CMD)
}

function check_backup {
  echo -n "Checking backup files for $1 ... "
  load_dumps
  if [ ! -f $MYSQL_DUMP ] || [ ! -f $CMS_DUMP ]; then
    echo
    echo "At least one of the following backup files are missing:"
    echo $MYSQL_DUMP
    echo $CMS_DUMP
    echo Exiting.
    exit 1
  else
    echo ok
  fi
}

function directory_is_empty {
  [ ! "$(ls -A $1)" ]
}

function rebuild_cms_files {
  echo -n "Restoring CMS files from $1 ... "
  load_dumps
  sudo mkdir -p $CMS_DIR
  sudo touch $CMS_DIR$TIMESTAMP_EXT
  sudo tar -xzpf $CMS_DUMP -C $CMS_DIR
  generate_user_password
  USER_SQL=$DB_IMPORT_DIR/$($TIMESTAMP_CMD).sql
  cp $CREATE_USER_TEMPLATE $USER_SQL
  sed -i 's/#DATABASE#/'$DB_NAME'/g' $USER_SQL
  sed -i 's/#USERNAME#/'$USER_NAME'/g' $USER_SQL
  sed -i 's/#PASSWORD#/'$USER_PASSWORD'/g' $USER_SQL
  $CMS_NAME"_update_config"
  echo done
}

function load_mysql_container {
  MYSQL_CONTAINER=$(sudo docker ps -q -f ancestor=mysql:5.7)
}

function invoke_mysql {
  load_mysql_container
  sudo docker exec -i $MYSQL_CONTAINER \
    mysql -u root --password=$MYSQL_ROOT_PASSWORD $1 2> /dev/null
}

function mysql_is_up {
  echo "do 0;" | invoke_mysql
}

function rebuild_database {
  echo -n "Restoring database from $1 ... "
  load_dumps
  echo "create database $DB_NAME;" | invoke_mysql
  zcat $MYSQL_DUMP | invoke_mysql $DB_NAME
  echo done
}

function confirmation_to_proceed {
echo "$1 Type 'yes' to proceed."
read CHOICE
case "$CHOICE" in
  "yes")
    echo "Proceeding...";
    ;;
  *)
    echo "Exiting."
    exit
    ;;
esac
}

function rebuild_from_scratch {
  iterate_configs check_backup
  if [ -z $IMPLIED_YES ]; then
    confirmation_to_proceed \
      "Complete rebuild from backup will destroy all existing sites."
  fi
  sudo docker-compose down
  sudo mkdir -p $DATA_DIR
  sudo mkdir -p $CMS_BASE_DIR
  sudo rm -r ${CMS_BASE_DIR?"Barmin prevented"}/*
  mkdir -p $DB_IMPORT_DIR
  chmod a+w $DB_IMPORT_DIR
  directory_is_empty "$DB_IMPORT_DIR" || rm $DB_IMPORT_DIR/*
  iterate_configs rebuild_cms_files
  sudo rm -r $DB_DIR
  generate_root_password
  sudo docker-compose up -d
  echo -n "Waiting for MySQL to start "
  while ! mysql_is_up; do sleep 1; echo -n "."; done
  echo " done"
  iterate_configs rebuild_database
}

function restore_single_site {
  load_config $1
  load_dumps
  check_backup $1
  if [ $CMS_DUMP -ot $CMS_DIR$TIMESTAMP_EXT ]; then
    set +x
    echo "Backup has never been taken from the running system."
    echo "Either run 'create-backup' first, or run with '-a' for a complete rebuild."
    exit 1
  fi
  if [ -z $IMPLIED_YES ]; then
    confirmation_to_proceed \
      "Restoring '$1' from backup will destroy existing data in this site."
  fi
  echo -n "Restoring CMS files ... "
  sudo rm -r ${CMS_DIR?"Barmin prevented"}/*
  sudo mkdir -p $CMS_DIR
  sudo tar -xzpf $CMS_DUMP -C $CMS_DIR
  echo done
  echo -n "Restoring database ... "
  source $DB_SECRET
  zcat $MYSQL_DUMP | invoke_mysql $DB_NAME
  echo done
}

if [ ! -z $COMPLETE_RESTORE ]; then
  rebuild_from_scratch
elif [ ! -z $1 ]; then
  restore_single_site $1
else
  echo "Use -a to rebuild the whole hosting or provide a site to restore"
fi
